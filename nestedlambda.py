from bitcoin import  *
a = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
b = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
c = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
d = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
e = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
f = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
g = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
h = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
i = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
j = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
k = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
l = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
m = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
n = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
o = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
p = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
q = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
r = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
s = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
t = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
u =  ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
v = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
w = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
x = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
y = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
z = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
a1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
b1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
c1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
d1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
e1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
f1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
g1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
h1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
i1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
j1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
k1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
l1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
m1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
n1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
o1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
p1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
q1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
r1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
s1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
t1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
u1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
v1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
w1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
x1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
y1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
z1 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
a2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
b2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
c2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
d2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
e2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
f2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
g2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
h2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
i2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
j2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
k2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
l2 = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']


def lamlist(l1, l2, l3, l4):
    funs = []
    for s1 in l1: 
        for s2 in l2: 
            for s3 in l3: 
                for s4 in l4:
                    x = lambda  s1=s1, s2=s2, s3=s3, s4=s4: (s1,s2,s3,s4)
                    funs.append(x)
    return funs

#def lamlist(l1, l2, l3):
#    return [lambda i=i, j=j, k=k: (i, j, k) for i in l1 for j in l2 for k in l3] 


funlist = [lamlist(a,b,c,d), lamlist(e,f,g,h), lamlist(i,j,k,l), lamlist(m,n,o,p), lamlist(q,r,s,t), lamlist(u,v,w,x), lamlist(y,z,a1,b1), lamlist(c1,d1,e1,f1),lamlist(g1,h1,i1,j1), lamlist(k1, l1,m1,n1),lamlist(o1,p1,q1,r1), lamlist(s1,t1,u1,v1), lamlist(w1,x1,y1,z1), lamlist(a2,b2,c2,d2), lamlist(e2,f2,g2,h2), lamlist(i2,j2,k2,l2)]

for f1 in funlist[0]:
    g1, g2, g3, g4 = f1()
    for f2 in funlist[1]:
        h1, h2,h3, h4 = f2()
        for f3 in funlist[2]:
            i1,i2,i3,i4 = f3()
            for f4 in funlist[3]:
                j1,j2,j3,j4 = f4()
                for f5 in funlist[4]:
                    k1, k2, k3, k4 = f5()
                    for f6 in funlist[5]:
                        l1,l2,l3,l4 = f6()
                        for f7 in funlist[6]:
                            m1, m2,m3,m4 = f7()
                            for f8 in funlist[7]:
                                n1,n2,n3,n4 = f8()
                                for f9 in funlist[8]:
                                    o1,o2,o3,o4 = f9()
                                    for f10 in funlist[9]:
                                        p1,p2,p3,p4 = f10()
                                        for f11 in funlist[10]:
                                            q1,q2,q3,q4 = f11()
                                            for f12 in funlist[11]:
                                                r1,r2,r3,r4 = f12()
                                                for f13 in funlist[12]:
                                                    s1,s2,s3,s4 = f13()
                                                    for f14 in funlist[13]:
                                                        t1,t2,t3,t4 = f14()
                                                        for f15 in funlist[14]:
                                                            u1,u2,u3,u4 = f15()
                                                            for f16 in funlist[15]:
                                                                v1,v2,v3,v4 = f16()
                                                                strg = g1+g2+g3+g4+h1+h2+h3+h4+i1+i2+i3+i4+j1+j2+j3+j4+k1+k2+k3+k4+l1+l2+l3+l4+m1+m2+m3+m4+n1+n2+n3+n4+o1+o2+o3+o4+p1+p2+p3+p4+q1+q2+q3+q4+r1+r2+r3+r4+s1+s2+s3+s4+t1+t2+t3+t4+u1+u2+u3+u4+v1+v2+v3+v4
                                                                pub  = privtopub(strg)
                                                                addr = pubtoaddr(pub)
                                                                h = history(addr)
                                                                if count(h)>0:
                                                                    file = open('nested-founds.txt', 'a')
                                                                    cons = str(strg)+","+str(addr)+","+pub+","+str(count(h))+"\n"
                                                                    file.write(cons)
                                                                    file.close()
                                                                print(strg, ' ------- ', count(strg), '-- count ---', count(h))
